import logging
from telegram.ext import Application, CommandHandler, ContextTypes
from telegram import Update
import requests
from datetime import time
import pytz

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

TOKEN = "7843232490:AAFVQx20mngb8X63kWAAUyF1O4JrNwF_nyw"
OWM_API_KEY = "459d6e47fe64424ccfaafade5576c2e1"
VLADIKAVKAZ_LAT = 43.0367
VLADIKAVKAZ_LON = 44.6678
TIMEZONE = pytz.timezone('Europe/Moscow')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class WeatherBot:
    def __init__(self):
        self.session = requests.Session()  # –°–µ—Å—Å–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
        self.session.headers.update({'User-Agent': 'Mozilla/5.0'})

    async def get_weather(self):
        """–£–ª—É—á—à–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤—Å–µ—Ö –æ—à–∏–±–æ–∫"""
        try:
            url = f"https://api.openweathermap.org/data/2.5/weather?lat={VLADIKAVKAZ_LAT}&lon={VLADIKAVKAZ_LON}&units=metric&lang=ru&appid={OWM_API_KEY}"
            
            # –¢–∞–π–º–∞—É—Ç—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ (5 —Å–µ–∫ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ, 10 —Å–µ–∫ –Ω–∞ —á—Ç–µ–Ω–∏–µ)
            response = self.session.get(url, timeout=(5, 10))
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—à–∏–±–æ–∫
            
            data = response.json()
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞
            if not all(key in data for key in ['weather', 'main']):
                raise ValueError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç API")
            
            weather_desc = data['weather'][0]['description']
            temp = data['main']['temp']
            temp_min = data['main']['temp_min']
            temp_max = data['main']['temp_max']
            
            # –°–ª–æ–≤–∞—Ä—å —ç–º–æ–¥–∑–∏ —Å —É—á–µ—Ç–æ–º —Ä—É—Å—Å–∫–∏—Ö –æ–ø–∏—Å–∞–Ω–∏–π
            weather_emojis = {
                '—è—Å–Ω–æ': '‚òÄÔ∏è', '—Å–æ–ª–Ω–µ—á–Ω–æ': '‚òÄÔ∏è',
                '–æ–±–ª–∞—á–Ω–æ': '‚òÅÔ∏è', '–ø–∞—Å–º—É—Ä–Ω–æ': '‚òÅÔ∏è',
                '–¥–æ–∂–¥—å': 'üåß', '–ª–∏–≤–µ–Ω—å': 'üåß',
                '–≥—Ä–æ–∑–∞': '‚õà', '–º–æ–ª–Ω–∏—è': '‚ö°',
                '—Å–Ω–µ–≥': '‚ùÑÔ∏è', '—Ç—É–º–∞–Ω': 'üå´',
                '–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ': 'üå§'
            }
            
            # –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π —ç–º–æ–¥–∑–∏
            emoji = 'üå°'  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
            for key in weather_emojis:
                if key in weather_desc.lower():
                    emoji = weather_emojis[key]
                    break
            
            return (
                f"–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ!üëã\n\n"
                f"–°–µ–π—á–∞—Å –≤–æ –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑–µ: {weather_desc.capitalize()} {emoji}\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(temp)}¬∞C (–º–∏–Ω {round(temp_min)}¬∞C, –º–∞–∫—Å {round(temp_max)}¬∞C)\n"
                f"üí® –í–µ—Ç–µ—Ä: {data.get('wind', {}).get('speed', 'N/A')} –º/—Å\n\n"
                f"–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! ‚òï"
            )
            
        except requests.exceptions.RequestException as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API: {str(e)}")
        except ValueError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
        except Exception as e:
            logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        
        return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text(
            "üå§ –Ø –±–æ—Ç –ø–æ–≥–æ–¥—ã –¥–ª—è –í–ª–∞–¥–∏–∫–∞–≤–∫–∞–∑–∞!\n"
            "–ö–æ–º–∞–Ω–¥—ã:\n"
            "/weather - —Ç–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞\n"
            "/setup - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –≤ 6:30"
        )

    async def send_weather(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–≥–æ–¥—ã —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –∑–∞–≥—Ä—É–∑–∫–∏"""
        msg = await update.message.reply_text("üîÑ –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ...")
        weather_msg = await self.get_weather()
        await context.bot.edit_message_text(
            chat_id=update.effective_chat.id,
            message_id=msg.message_id,
            text=weather_msg
        )

    async def setup_daily_weather(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        if not context.job_queue:
            await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")
            return

        chat_id = update.effective_chat.id
        jobs = context.job_queue.get_jobs_by_name(str(chat_id))
        
        if jobs:
            await update.message.reply_text("‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
            return
            
        context.job_queue.run_daily(
            self.daily_weather_handler,
            time=time(hour=6, minute=30, tzinfo=TIMEZONE),
            chat_id=chat_id,
            name=str(chat_id))
            
        await update.message.reply_text(
            "‚è∞ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ 6:30!\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /weather –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞"
        )

    async def daily_weather_handler(self, context: ContextTypes.DEFAULT_TYPE):
        try:
            weather_msg = await self.get_weather()
            await context.bot.send_message(
                chat_id=context.job.chat_id,
                text=weather_msg
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ daily_weather_handler: {e}")

    async def error_handler(self, update: object, context: ContextTypes.DEFAULT_TYPE):
        logger.error(f"–û—à–∏–±–∫–∞: {context.error}", exc_info=True)
        if update and hasattr(update, 'message'):
            await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º!")

    def run(self):
        app = Application.builder().token(TOKEN).build()
        
        app.add_handler(CommandHandler("start", self.start))
        app.add_handler(CommandHandler("weather", self.send_weather))
        app.add_handler(CommandHandler("setup", self.setup_daily_weather))
        app.add_error_handler(self.error_handler)
        
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        app.run_polling()

if __name__ == '__main__':
    bot = WeatherBot()
    bot.run()